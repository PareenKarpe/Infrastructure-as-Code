{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "lambda stack for bill email",
  "Parameters": {
    "DOMAIN": {
      "Default": "prod.pareenkarpe.me",
      "Type": "String"

    }
  },
  "Resources": {
    "lambdaExecutionRoleId": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": "lambda.amazonaws.com" },
            "Action": "sts:AssumeRole"
          } ]
        },
        "Path": "/",
        "RoleName": "LambdaExecutionRole",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-LambdaExecutionRoleId" }
        } ]
      }
    },
    "lambdaFunctionId": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "csye6225",
        "Code": {
          "S3Bucket": "codedeploy.pareenkarpe.me.tld7",
          "S3Key": "index.zip"
        },
        "Handler": "index.handler",
        "Environment": {
          "Variables": {
            "domain": {"Ref": "DOMAIN"},
            "table": "dynamo"
          }
        },
        "Role": {"Fn::GetAtt": ["lambdaExecutionRoleId", "Arn"]},
        "Runtime": "nodejs10.x",
        "MemorySize" : 256,
        "Timeout": 180,
        "ReservedConcurrentExecutions": 5,
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Sub": "${AWS::StackName}-Email" }
          },
          {
            "Key" : "Application Role",
            "Value" : "Email Lambda"
          }
        ]
      }
    },
    "topicId": {
      "Type" : "AWS::SNS::Topic",
      "DependsOn": "lambdaFunctionId",
      "Properties" : {
        "Subscription" : [{
          "Endpoint" : { "Fn::GetAtt": [ "lambdaFunctionId", "Arn" ] },
          "Protocol" : "lambda"
        } ],
        "TopicName" : "email_address"
      }
    },
    "lambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "lambdaFunctionId",
      "Properties": {
        "FunctionName": {"Ref": "lambdaFunctionId"},
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {"Ref": "topicId"}
      }
    },
    "lambdaPolicy" : {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "topicId",
      "Properties" : {
        "ManagedPolicyName" : "lambdaPolicy",
        "PolicyDocument" :  {
          "Version" : "2012-10-17",
          "Statement" : [
            {
              "Sid" : "LambdaDynamoDBAccess",
              "Effect" : "Allow",
              "Action" : ["dynamodb:GetItem", "dynamodb:PutItem", "dynamodb:UpdateItem"],
              "Resource" : "arn:aws:dynamodb:us-east-1:276639715572:table/dynamo"
            },
            {
              "Sid" : "LambdaSESAccess",
              "Effect": "Allow",
              "Action": [
                "ses:VerifyEmailAddress",
                "ses:SendEmail",
                "ses:SendRawEmail"
              ],
              "Resource": {"Fn::Sub": "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*"}
            },
            {
              "Sid" : "LambdaS3Access",
              "Effect": "Allow",
              "Action": [ "s3:GetObject"],
              "Resource": { "Fn::Sub": "arn:aws:s3:::code-deploy.${DOMAIN}/*" }
            },
            {
              "Sid" : "LambdaSNSAccess",
              "Effect": "Allow",
              "Action": [ "sns:ConfirmSubscription"],
              "Resource": {"Ref": "topicId"}
            }
          ]
        },
        "Roles": [{"Ref": "lambdaExecutionRoleId"}]
      }
    },
    "topicPolicy" : {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "topicId",
      "Properties" : {
        "ManagedPolicyName" : "EC2TopicAccessPolicy",
        "PolicyDocument" :  {
          "Version" : "2012-10-17",
          "Statement" : [
            {
              "Sid" : "AllowEC2ToPublishToSNSTopic",
              "Effect" : "Allow",
              "Action" : [ "sns:Publish", "sns:CreateTopic"],
              "Resource" : {"Ref": "topicId"}
            }
          ]
        },
        "Roles": ["EC2ExecutionRole"]
      }
    }
  },
  "Outputs": {

  }
}